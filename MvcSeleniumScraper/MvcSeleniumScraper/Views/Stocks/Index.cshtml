@model IEnumerable<MvcSeleniumScraper.Models.Stock>

@{
    ViewBag.Title = "Index";
}


@*<script src="//code.jquery.com/jquery.min.js"></script>
<script src="~/Scripts/paginathing.js"></script>*@

<h2 class="jumbotron">Yahoo Stocks</h2>
<button>@Html.ActionLink("Update Stock Info", "NewScrape", "Stocks")</button>
<button>@Html.ActionLink("Stock History", "Index", "StockHistories")</button>

<table class="table table-hover display" >
    <thead>
        <tr>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Symbol)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.LastPrice)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Change)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.ChangePercent)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Volume)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.AvgVol)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.MarketCap)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="yahooCurrent" style="text-align: center">

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Symbol)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Change)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ChangePercent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Volume)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AvgVol)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MarketCap)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.Symbol })
                </td>
            </tr>
        }
    </tbody>

</table>

@*<script>
    $('#yahooCurrent').paginathing({
        perPage: 10,
        prevText: false,
        nextText: false,
        pageNumbers: false,
        firstText: false,
        lastText: false,
    });

</script>*@